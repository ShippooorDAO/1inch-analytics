{
  // Configuration for JavaScript files
  "extends": [
    "airbnb-base",
    "next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "plugin:prettier/recommended"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "endOfLine": "auto"
      }
    ]
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint", "unused-imports", "simple-import-sort"],
      "extends": [
        "airbnb-typescript",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "singleQuote": true,
            "endOfLine": "auto"
          }
        ],

        /**
         * Temporarily disabled rules.
         * TODO: Fix these one by one.
         */
        "unused-imports/no-unused-vars": "off", // Allow unused variable
        "@typescript-eslint/no-shadow": "off", // Allow shadowing variable
        "typescript-eslint/no-unused-vars": "off", // Allow using variable before declaration
        "no-nested-ternary": "off", // Allow nested ternary
        "no-param-reassign": "off", // Allow reassigning function parameter
        "no-restricted-syntax": "off", // Allow using for...of loop
        "import/no-cycle": "off", // Allow circular dependency
        "@typescript-eslint/no-unused-expressions": "off", // Allow unused expression
        "@typescript-eslint/no-use-before-define": "off", // Allow using variable before declaration
        "no-case-declarations": "off", // Allow using variable before declaration
        "@typescript-eslint/no-throw-literal": "off", // Allow throwing string
        "class-methods-use-this": "off", // Allow unused class method
        "no-continue": "off", // Allow using continue statement
        "no-await-in-loop": "off", // Allow using await in loop
        "no-promise-executor-return": "off", // Allow returning value in promise executor
        "consistent-return": "off", // Allow inconsistent return
        "no-underscore-dangle": "off", // Allow using underscore in variable name
        "no-plusplus": "off", // Allow using ++ operator
        "prefer-const": "off", // Allow using let instead of const
        "@typescript-eslint/default-param-last": "off", // Allow using default parameter in the middle of function parameter
        "import/no-extraneous-dependencies": "off", // Allow importing devDependencies
        "react/display-name": "off", // Allow not naming react component
        "@typescript-eslint/naming-convention": "off", // Allow not naming react component
        "react/no-unescaped-entities": "off", // Allow using html entity in JSX

        /**
         * Custom rules
         */
        "max-classes-per-file": "off", // Allow multiple classes in a single file
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "jsx-a11y/anchor-is-valid": "off", // Next.js use his own internal link system
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "react-hooks/exhaustive-deps": "off", // Incorrectly report needed dependency with Next.js router
        "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": 1,
        "unused-imports/no-unused-imports": "error"
        // "unused-imports/no-unused-vars": [
        //   "error",
        //   { "argsIgnorePattern": "^_" }
        // ]
      }
    }
  ]
}
